name: Integration Test v0

on:
  workflow_call:
    inputs:
      kicker_ref:
        type: string
        description: 'The reference of https://github.com/godwokenrises/godwoken-kicker.git'
        required: false
        default: 'rc-0.10.0'
      gw_prebuild_image_name:
        description: 'The prebuild image name, e.g. nervos/godwoken-prebuilds or ghcr.io/flouse/godwoken-prebuilds'
        required: false
        type: string
      gw_prebuild_image_tag:
        description: 'The prebuilt image tag'
        required: false
        type: string
      godwoken_ref:
        description: 'The reference of https://github.com/godwokenrises/godwoken.git'
        required: false
        type: string
      gw_scripts_ref:
        description: 'The reference of https://github.com/godwokenrises/godwoken-scripts.git'
        required: false
        type: string
      polyjuice_ref:
        description: 'The reference of https://github.com/godwokenrises/godwoken-polyjuice.git'
        required: false
        type: string
      web3_ref:
        description: 'The reference of https://github.com/godwokenrises/godwoken-web3.git'
        required: false
        type: string
      log-level:
        type: string
        description: 'Log level'
        required: false
        default: 'INFO'
  push:
    branches:
    - v0
  pull_request:
    branches:
    - v0


jobs:
  # Run integration-tests on devnet_v0 deployed by Godowoken-Kicker
  test-on-devnet-v0:
    runs-on: ubuntu-latest
    env:
      TOOL_REF: v0.10.x
      FINALITY_BLOCKS_NUM: 4

    steps:
    # Check multiple repos (nested)
    # see: https://github.com/actions/checkout#checkout-multiple-repos-nested
    - name: Checkout godwoken-tests
      uses: actions/checkout@v3
      with:
        repository: godwokenrises/godwoken-tests
        ref: v0
        submodules: 'recursive'
    - name: Checkout Kicker # multiple repos (nested)
      uses: actions/checkout@v3
      with:
        repository: godwokenrises/godwoken-kicker
        ref: ${{ inputs.kicker_ref || 'rc-0.10.0' }}
        path: kicker
        submodules: 'recursive'
    - name: Checkout godwoken-examples (tools) to ${{ env.TOOL_REF }}
      working-directory: tools
      run: |
        git fetch origin ${{ env.TOOL_REF }}
        git checkout FETCH_HEAD

    # set up buildx/BuildKit runner in the context,
    # make the Docker cache exportable and thus properly cacheable
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Rust Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry
          ~/.cargo/git
          target
          kicker/cache/build
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - name: Install moleculec
      run: |
        test "$(moleculec --version)" = "Moleculec 0.7.2" \
        || CARGO_TARGET_DIR=target/ cargo install moleculec --version 0.7.2 --force
    - name: Install Capsule
      env:
        CAPSULE_VERSION: v0.7.3
      run: |
        capsule -V \
        || (curl -OL https://github.com/nervosnetwork/capsule/releases/download/${CAPSULE_VERSION}/capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz \
        && tar xf capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz \
        && mv capsule_${CAPSULE_VERSION}_x86_64-linux/capsule ~/.cargo/bin/)

    - name: Edit kicker/docker/.build.mode.env
      working-directory: kicker/docker/
      run: |
        if [ -n "${{ inputs.gw_prebuild_image_name }}" ]; then
          sed -i "s|DOCKER_PREBUILD_IMAGE_NAME=.*|DOCKER_PREBUILD_IMAGE_NAME=${{ inputs.gw_prebuild_image_name }}|g" .build.mode.env
        fi
        if [ -n "${{ inputs.gw_prebuild_image_tag }}" ]; then
          sed -i "s|DOCKER_PREBUILD_IMAGE_TAG=.*|DOCKER_PREBUILD_IMAGE_TAG=${{ inputs.gw_prebuild_image_tag }}|g" .build.mode.env
        fi
        if [ -n "${{ inputs.godwoken_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_GODWOKEN=false|MANUAL_BUILD_GODWOKEN=true|g" \
            -e "s|GODWOKEN_GIT_CHECKOUT=.*|GODWOKEN_GIT_CHECKOUT=${{ inputs.godwoken_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.gw_scripts_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_SCRIPTS=false|MANUAL_BUILD_SCRIPTS=true|g" \
            -e "s|SCRIPTS_GIT_CHECKOUT=.*|SCRIPTS_GIT_CHECKOUT=${{ inputs.gw_scripts_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.polyjuice_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_POLYJUICE=false|MANUAL_BUILD_POLYJUICE=true|g" \
            -e "s|POLYJUICE_GIT_CHECKOUT=.*|POLYJUICE_GIT_CHECKOUT=${{ inputs.polyjuice_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.web3_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_WEB3=false|MANUAL_BUILD_WEB3=true|g" \
            -e "s|MANUAL_BUILD_WEB3_INDEXER=false|MANUAL_BUILD_WEB3_INDEXER=true|g" \
            -e "s|WEB3_GIT_CHECKOUT=.*|WEB3_GIT_CHECKOUT=${{ inputs.web3_ref }}|g" \
            .build.mode.env
        fi
        echo "This .build.mode.env will be used:"
        cat .build.mode.env

    - name: Tune rollupConfig.finality_blocks to ${{ env.FINALITY_BLOCKS_NUM }}
      working-directory: kicker
      run: |
        echo "tune rollupConfig.finality_blocks to ${{ env.FINALITY_BLOCKS_NUM }}"
        sed -i \
          -e 's|\\\"finality_blocks\\\": 100|\\\"finality_blocks\\\": ${{ env.FINALITY_BLOCKS_NUM }}|' \
          docker/layer2/entrypoint.sh

    # - name: Add debug logs for ckb_script::verify module
    #   if: ${{ false }}
    #   working-directory: kicker
    #   run: |
    #     echo "add debug logs for ckb_script::verify module"
    #     sed -i \
    #       -e 's|RUST_LOG=info|RUST_LOG=info,ckb_script::verify=debug|' \
    #       docker/layer2/entrypoint.sh

    - name: Start Godwoken-Kicker services
      working-directory: kicker
      run: |
        docker system df -v
        docker-compose --version
        make init
        make start
        docker-compose --file docker/docker-compose.yml logs --tail 6
      # FIXME: Sometimes, Godwoken service is not running
      # https://github.com/Flouse/godwoken/runs/3639382192?check_suite_focus=true#step:8:667

    - name: Enable offchain validator of Godwoken
      working-directory: kicker
      if: ${{ false }}
      run: |
        sudo chown -R `whoami` workspace/config.toml
        grep -q "\[offchain_validator\]" workspace/config.toml \
        || cat >> workspace/config.toml << __EOF__

        [offchain_validator]
        verify_withdrawal_signature = true
        verify_tx_signature = true
        verify_tx_execution = true
        verify_max_cycles = 140000000
        dump_tx_on_failure = true
        __EOF__
        docker restart docker_godwoken_1
        docker-compose --file docker/docker-compose.yml logs --tail 6

    - name: Check if Godwoken is running
      working-directory: kicker
      run: |
        source gw_util.sh
        if isGodwokenRpcRunning; then
          echo "Go to next step";
        else
          echo "Try to start Kicker services again."
          make start
          isGodwokenRpcRunning
        fi
        sudo chown -R `whoami` cache/build

    - uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    # FIXME: cache failed
    # - name: Node Cache
    #   uses: actions/cache@v2
    #   id: npm-and-yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #   with:
    #     path: |
    #       ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       ~/.npm
    #     key: ${{ runner.os }}-node_modules-${{ hashFiles('/home/runner/work/**/package-lock.json', '/home/runner/work/**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node_modules-

    - name: Generate devnet envfile from godwoken-config.toml
      working-directory: tools
      run: |
        yarn install && yarn build-all
        export SCRIPT_DEPLOY_RESULT_PATH=../kicker/workspace/deploy/scripts-deploy-result.json
        export GODWOKEN_CONFIG_PATH=../kicker/workspace/config.toml
        yarn run copy-configs && yarn run convert-config-format
        cd packages/tools
        yarn generate-envfile

    - name: Deposit from layer1 to layer2
      working-directory: tools
      run: |
        LUMOS_CONFIG_FILE=../configs/lumos-config.json \
          node ./packages/tools/lib/account-cli.js deposit \
            --private-key 0x6cd5e7be2f6504aa5ae7c0c04178d8f47b7cfc63b71d95d9e6282f5b090431bf \
            --capacity 333322221111 \
        | tee result
        if egrep -q "Deposit success" result; then
          echo "The deposited asset can be withdrawn only after [finalize_blocks] layer2 blocks."          
        else
          exit 1
        fi
    
    - name: Get current layer2 block number
      id: deposit-block-num
      uses: actions/github-script@v6
      with:
        script: |
          const { getTipBlockNumber } = require("./scripts/helper");
          return await getTipBlockNumber();
        result-encoding: string

    - name: Testcase - Godwoken Polyjuice Compatibility Examples
      working-directory: testcases/godwoken-polyjuice-compatibility-examples
      run: |
        yarn install && yarn compile
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/multi-sign-wallet.ts
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/box-proxy.ts
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/multicall.ts
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/create2.ts
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/stable-swap-3-pool.ts
      timeout-minutes: 6

    - name: Testcase - Pancakeswap
      working-directory: testcases/pancakeswap-contracts-godwoken
      run: |
        yarn && yarn compile
        ENV_PATH=../../tools/packages/tools/configs/devnet.env yarn ts-node ./scripts/deploy.ts
      timeout-minutes: 6

    - name: Testcase - LendingContracts
      working-directory: testcases/lending-contracts
      run: |
        yarn
        echo "The configs should have been updated:"
        cat config.json
        yarn deploy
      timeout-minutes: 12

    - name: Try to unlock when no valid withdrawal exists => No valid withdrawal cell found
      working-directory: tools
      run: |
        LUMOS_CONFIG_FILE=../configs/lumos-config.json \
          node ./packages/tools/lib/account-cli.js unlock \
            --private-key 0x6cd5e7be2f6504aa5ae7c0c04178d8f47b7cfc63b71d95d9e6282f5b090431bf \
        2>&1 | tee result || true
        egrep -q "No valid withdrawal cell found" result || exit 1

    # Note:
    # The deposited asset can be withdrawn only after `finalize_blocks` layer2 blocks.
    - name: Wait until [finalize_blocks] layer2 blocks passed
      uses: actions/github-script@v6
      with:
        script: |
          const { getTipBlockNumber, waitXl2BlocksPassed } = require("./scripts/helper");
          const depositBlockNum = ${{ steps.deposit-block-num.outputs.result }};
          await waitXl2BlocksPassed(${{ env.FINALITY_BLOCKS_NUM }} + 1, depositBlockNum);

    - name: Request withdrawal from layer2 back to layer1
      working-directory: tools
      run: |
        LUMOS_CONFIG_FILE=../configs/lumos-config.json \
          node ./packages/tools/lib/account-cli.js withdraw \
            --private-key 0x6cd5e7be2f6504aa5ae7c0c04178d8f47b7cfc63b71d95d9e6282f5b090431bf \
            --capacity 33322221111 \
            --owner-ckb-address ckt1qyqf22qfzaer95xm5d2m5km0f6k288x9warqnhsf4m \
            --fee 1000 \
        | tee result
        if egrep -q "withdrawal success" result; then
          echo "Success! Withdrawal request sent. Please Wait for challenge period duration to unlock the funds."
        else
          exit 1
        fi

    - name: Wait 2 layer2 blocks passed
      uses: actions/github-script@v6
      with:
        script: |
          const { waitXl2BlocksPassed } = require("./scripts/helper");
          await waitXl2BlocksPassed(2);

    - name: Try to unlock unfinalized withdrawal => "withdrawal cell not finalized"
      working-directory: tools
      run: |
        LUMOS_CONFIG_FILE=../configs/lumos-config.json \
          node ./packages/tools/lib/account-cli.js unlock \
            --private-key 0x6cd5e7be2f6504aa5ae7c0c04178d8f47b7cfc63b71d95d9e6282f5b090431bf \
        2>&1 | tee result || true
        egrep -q "not finalized" result || exit 1
    
    - name: Get current layer2 block number
      id: withdrawal-block-num
      uses: actions/github-script@v6
      with:
        script: |
          const { getTipBlockNumber } = require("./scripts/helper");
          return await getTipBlockNumber();
        result-encoding: string

    - name: Wait until [finalize_blocks] layer2 blocks passed
      uses: actions/github-script@v6
      with:
        script: |
          const { waitXl2BlocksPassed } = require("./scripts/helper");
          const withdrawalBlockNum = ${{ steps.withdrawal-block-num.outputs.result }};
          await waitXl2BlocksPassed(${{ env.FINALITY_BLOCKS_NUM }} + 1, withdrawalBlockNum);

    - name: Unlock the withdrawable funds after [CHALLENGE_MATURITY_BLOCKS] blocks to complete the withdrawal process
      working-directory: tools
      run: |
        LUMOS_CONFIG_FILE=../configs/lumos-config.json \
          node ./packages/tools/lib/account-cli.js unlock \
            --private-key 0x6cd5e7be2f6504aa5ae7c0c04178d8f47b7cfc63b71d95d9e6282f5b090431bf \
        | tee result
        egrep -q "tx 0x.+ committed" result || exit 1

    - name: Save logs
      if: always()
      working-directory: kicker/docker
      run: |
        docker-compose logs --tail 66
        docker-compose logs > /tmp/kicker.log
    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: kicker-logs
        path: |
          /tmp/kicker.log
    
    - name: Archive the dumped transactions in kicker/workspace/debug-tx-dump
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: debug-tx-dump
        path: |
          kicker/workspace/debug-tx-dump

    - name: Stop containers of Kicker
      if: always()
      working-directory: kicker
      run: make stop
