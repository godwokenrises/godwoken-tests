name: Integration Test v1

on:
  workflow_call:
    inputs:
      # If `extra_github_env` is set, it will be put into GITHUB_ENV at the beginning of each job
      #
      # ```
      # - name: Update GITHUB_ENV if inputs.extra_github_env set
      #   if: "${{ inputs.extra_github_env != '' }}"
      #   run: echo ${{ inputs.extra_github_env }} >> $GITHUB_ENV
      # ```
      #
      # ## Examples
      #
      # * Specify the kicker version
      #
      #   ```yaml
      #   extra_github_env: |
      #     KICKER_REPO=keroro520/godwoken-kicker
      #     KICKER_REF=helloworld
      #   ```
      #
      extra_github_env:
        type: string
        description: 'Append write into GITHUB_ENV at the begining of every job'
        required: false
      gw_prebuild_image_name:
        description: 'The prebuild image name, e.g. nervos/godwoken-prebuilds or ghcr.io/flouse/godwoken-prebuilds'
        required: false
        type: string
      gw_prebuild_image_tag:
        description: 'The prebuilt image tag'
        required: false
        type: string
      godwoken_ref:
        description: 'The reference of https://github.com/nervosnetwork/godwoken.git'
        required: false
        type: string
      gw_scripts_ref:
        description: 'The reference of https://github.com/nervosnetwork/godwoken-scripts.git'
        required: false
        type: string
      polyjuice_ref:
        description: 'The reference of https://github.com/nervosnetwork/godwoken-polyjuice.git'
        required: false
        type: string
      web3_ref:
        description: 'The reference of https://github.com/nervosnetwork/godwoken-web3.git'
        required: false
        type: string
      log-level:
        type: string
        description: 'Log level'
        required: false
        default: 'INFO'
  push:
    branches:
    - 'v1*'
    - 'develop'
  pull_request_target:
    branches:
    - 'v1*'
    - 'develop'

jobs:
  # Run integration-tests on devnet_v1 deployed by Godowoken-Kicker
  test-on-devnet-v1:
    env:
      FINALITY_BLOCKS_NUM: 3
    runs-on: ubuntu-latest
    steps:
    - name: Update GITHUB_ENV if inputs.extra_github_env set
      if: "${{ inputs.extra_github_env != '' }}"
      run: |
        echo "${{ inputs.extra_github_env }}" >> $GITHUB_ENV

    # Check multiple repos (nested)
    # see: https://github.com/actions/checkout#checkout-multiple-repos-nested
    - name: Checkout godwoken-tests
      uses: actions/checkout@v3
    - name: Checkout Kicker # multiple repos (nested)
      uses: actions/checkout@v3
      with:
        repository: ${{ env.KICKER_REPO || 'RetricSu/godwoken-kicker' }}
        ref: ${{ env.KICKER_REF || 'compatibility-changes' }}
        path: kicker
        submodules: 'recursive'

    - name: Rust Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry
          ~/.cargo/git
          target
          kicker/cache/build
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    - name: Install moleculec
      run: |
        test "$(moleculec --version)" = "Moleculec 0.7.2" \
        || CARGO_TARGET_DIR=target/ cargo install moleculec --version 0.7.2 --force
    - name: Install Capsule
      env:
        CAPSULE_VERSION: v0.7.3
      run: |
        capsule -V \
        || (curl -OL https://github.com/nervosnetwork/capsule/releases/download/${CAPSULE_VERSION}/capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz \
        && tar xf capsule_${CAPSULE_VERSION}_x86_64-linux.tar.gz \
        && mv capsule_${CAPSULE_VERSION}_x86_64-linux/capsule ~/.cargo/bin/)

    - name: Edit kicker/docker/.build.mode.env
      working-directory: kicker/docker/
      run: |
        if [[ -n "${{ inputs.gw_prebuild_image_name }}" \
           && -n "${{ inputs.gw_prebuild_image_tag }}" ]]; then
          NEW_IMAGE=${{ inputs.gw_prebuild_image_name }}:${{ inputs.gw_prebuild_image_tag }}
          sed -i "s|image:.*godwoken-prebuilds.*|image: $NEW_IMAGE|g" docker-compose.yml
        fi
        if [ -n "${{ inputs.godwoken_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_GODWOKEN=false|MANUAL_BUILD_GODWOKEN=true|g" \
            -e "s|GODWOKEN_GIT_CHECKOUT=.*|GODWOKEN_GIT_CHECKOUT=${{ inputs.godwoken_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.gw_scripts_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_SCRIPTS=false|MANUAL_BUILD_SCRIPTS=true|g" \
            -e "s|SCRIPTS_GIT_CHECKOUT=.*|SCRIPTS_GIT_CHECKOUT=${{ inputs.gw_scripts_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.polyjuice_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_POLYJUICE=false|MANUAL_BUILD_POLYJUICE=true|g" \
            -e "s|POLYJUICE_GIT_CHECKOUT=.*|POLYJUICE_GIT_CHECKOUT=${{ inputs.polyjuice_ref }}|g" \
            .build.mode.env
        fi
        if [ -n "${{ inputs.web3_ref }}" ]; then
          sed -i \
            -e "s|MANUAL_BUILD_WEB3=false|MANUAL_BUILD_WEB3=true|g" \
            -e "s|MANUAL_BUILD_WEB3_INDEXER=false|MANUAL_BUILD_WEB3_INDEXER=true|g" \
            -e "s|WEB3_GIT_CHECKOUT=.*|WEB3_GIT_CHECKOUT=${{ inputs.web3_ref }}|g" \
            .build.mode.env
        fi
        echo "This .build.mode.env will be used:"
        cat .build.mode.env

    - name: Tune rollupConfig.finality_blocks to ${{ env.FINALITY_BLOCKS_NUM }}
      working-directory: kicker
      run: |
        echo "tune rollupConfig.finality_blocks to ${{ env.FINALITY_BLOCKS_NUM }}"
        sed -i \
          -e 's|\\\"finality_blocks\\\": 100|\\\"finality_blocks\\\": ${{ env.FINALITY_BLOCKS_NUM }}|' \
          docker/layer2/entrypoint.sh
    # - name: Add debug logs for ckb_script::verify module
    #   if: ${{ false }}
    #   working-directory: kicker
    #   run: |
    #     echo "add debug logs for ckb_script::verify module"
    #     sed -i \
    #       -e 's|RUST_LOG=info|RUST_LOG=info,ckb_script::verify=debug|' \
    #       docker/layer2/entrypoint.sh

    # set up buildx/BuildKit runner in the context,
    # make the Docker cache exportable and thus properly cacheable
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Init Godwoken-Kicker services
      working-directory: kicker
      run: |
        docker system df -v
        docker-compose --version
        set -a && source docker/.build.mode.env
        ./kicker init

    - name: Start Godwoken-Kicker services
      timeout-minutes: 45
      working-directory: kicker
      env: 
        START_GODWOKEN_V0: true
      run: |
        # Temporary workaround unreliable web3 health check
        set -a && source docker/.build.mode.env
        (echo " == kicker start attempt: 1 == " && ./kicker start) || \
        (echo " == kicker start attempt: 2 == " && ./kicker stop && ./kicker start) || \
        (echo " == kicker start failed == " && exit 1)
        docker-compose --file docker/docker-compose.yml logs --tail 6
      # FIXME: Sometimes, Godwoken service is not running
      # https://github.com/Flouse/godwoken/runs/3639382192?check_suite_focus=true#step:8:667

    # - name: Enable offchain validator of Godwoken
    #   working-directory: kicker
    #   if: ${{ false }}
    #   run: |
    #     sudo chown -R `whoami` workspace/config.toml
    #     grep -q "\[offchain_validator\]" workspace/config.toml \
    #     || cat >> workspace/config.toml << __EOF__
    #     [offchain_validator]
    #     verify_withdrawal_signature = true
    #     verify_tx_signature = true
    #     verify_tx_execution = true
    #     verify_max_cycles = 140000000
    #     dump_tx_on_failure = true
    #     __EOF__
    #     docker restart docker_godwoken_1
    #     docker-compose --file docker/docker-compose.yml logs --tail 6

    - name: Deposit for 2 dev accounts
      working-directory: kicker
      run: |
        # Deposit for the test accounts defined in `contracts/hardhat.config.js`.
        # The corresponding private keys are
        #   1390c30e5d5867ee7246619173b5922d3b04009cab9e9d91e14506231281a997
        #   2dc6374a2238e414e51874f514b0fa871f8ce0eb1e7ecaa0aed229312ffc91b0
        ./kicker deposit 0x966B30e576A4d6731996748B48Dd67C94eF29067 1000
        ./kicker deposit 0x4fef21f1d42e0d23d72100aefe84d555781c31bb 1000

    - name: Deposit for withdraw from v0 to v1 test
      working-directory: kicker
      run: |
        ./kicker deposit 0x966B30e576A4d6731996748B48Dd67C94eF29999 1000
        ./kicker deposit-v0 10000 # Use ckb-miner key

    - name: Withdraw from v0 to v1
      working-directory: kicker
      run: |
        ./kicker withdraw-v0-to-v1 0x966B30e576A4d6731996748B48Dd67C94eF29999 1000
        counter=1
        while [ $counter -le 60 ]
        do
          balance=$(./kicker get-balance 0x966B30e576A4d6731996748B48Dd67C94eF29999 | grep -oE "Balance:\s.*")
          echo "current balance: ${balance}=="
          # deposit 1000 + withdraw from v0 1000 (NOTE: CKB decimal is 18, aka 2000 * 10^18)
          if [ "$balance" = "Balance: 2000000000000000000000" ]; then
            echo "withdraw from v0 to v1 success"
            exit 0
          fi
          ((counter++))
          sleep 20s
        done
        echo "withdraw from v0 to v1 fail"
        exit 1

    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    # FIXME: cache failed
    # - name: Node Cache
    #   uses: actions/cache@v2
    #   id: npm-and-yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #   with:
    #     path: |
    #       ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       ~/.npm
    #     key: ${{ runner.os }}-node_modules-${{ hashFiles('/home/runner/work/**/package-lock.json', '/home/runner/work/**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node_modules-

    - name: Generate devnet envfile from godwoken-config.toml
      working-directory: tools
      run: |
        yarn install && yarn build-all

    - name: Wait 1 layer2 blocks passed
      uses: actions/github-script@v5
      with:
        script: |
          const { waitXl2BlocksPassed } = require("./scripts/helper");
          await waitXl2BlocksPassed(1);

    - name: Run hardhat test --network gw_devnet_v1
      working-directory: contracts
      run: npm install && npm run test

    # Only enable tmate while debugging
    # - name: Setup tmate session
    #   if: ${{ failure() }}
    #   uses: mxschmitt/action-tmate@v3
    #   timeout-minutes: 30

    - name: Save logs
      if: always()
      working-directory: kicker/docker
      run: |
        docker-compose logs --tail 66
        docker-compose logs > /tmp/kicker.log
    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: kicker-logs
        path: |
          /tmp/kicker.log
    
    - name: Archive the dumped transactions in kicker/workspace/debug-tx-dump
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: debug-tx-dump
        path: |
          kicker/workspace/debug-tx-dump

    - name: Stop containers of Kicker
      if: always()
      working-directory: kicker
      run: ./kicker stop
